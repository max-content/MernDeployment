{"ast":null,"code":"var _jsxFileName = \"/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/components/PetForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styled from '@emotion/styled';\nimport { navigate } from '@reach/router'; //=================== Emotion Styling ======================\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthorInput = styled.div`\n    background-color: #7e52a0;\n    color: #E6BCCD;\n    width: 300px;\n    margin: 120px;\n    padding: 25px;\n    border-radius: 5px;\n`;\n_c = AuthorInput;\nconst SubmitMe = styled.button`\n    background-color: #D295BF;\n    color: #f5f9e9;\n    border: 1px solid #f5f9e9;\n    margin-left: 10px;\n    margin-right: 20px;\n    text-decoration: none;\n    &:hover {\n        background-color: #29274c;\n        color: #d295bf;\n        border: 1px solid #1C2541;\n    }\n`;\n_c2 = SubmitMe;\nexport default _s(props => {\n  _s();\n\n  const {\n    initialName,\n    initialType,\n    initialDescription,\n    initialSkillOne,\n    initialSkillTwo,\n    initialSkillThree,\n    onSubmitProp\n  } = props;\n  console.log(\"LOGGING THE ON SUBMIT PROP\", onSubmitProp);\n  console.log(typeof onSubmitProp);\n  console.log(\"logging initial name\", initialName); // const [state, setState ] = useState({\n  //     name: \"\",\n  //     type: \"\",\n  //     description: \"\",\n  // });\n\n  const [name, setName] = useState(initialName);\n  const [type, setType] = useState(initialType);\n  const [description, setDescription] = useState(initialDescription);\n  const [skillOne, setSkillOne] = useState(initialSkillOne);\n  const [skillTwo, setSkillTwo] = useState(initialSkillTwo);\n  const [skillThree, setSkillThree] = useState(initialSkillThree); // const [errors, setErrors] = useState([]); \n  // const updatingState = (event) => {\n  //     console.log(errors)\n  //     if(event.target.name === \"name\" && event.target.value.length <= 3) {\n  //         setErrors({...errors, \n  //             name: \"First name needs more than 3 characters\"\n  //         });\n  //     }  else if(event.target.name === \"name\" && event.target.value.length > 3) {\n  //         setErrors({...errors, \n  //             name: \"\"\n  //         });\n  //     } else if(event.target.name === \"type\" && event.target.value.length <= 3) {\n  //         setErrors({...errors, \n  //             type: \"Last name needs more than 3 characters\"\n  //         });\n  //     } else if(event.target.name === \"type\" && event.target.value.length > 3) {\n  //         setErrors({...errors, \n  //             type: \"\"\n  //         });\n  //     }\n  //     setState({\n  //         ...state,\n  //         [event.target.name]: event.target.value,\n  //           //[] notation allows you to computed keys - other js variables as your key\n  //         });\n  // }\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    onSubmitProp({\n      name\n    });\n    navigate(\"/petshelter/all\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthorInput, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\" // onInput={(event) => updatingState(event)} \n          ,\n          onChange: e => setName(e.target.value),\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\" // onInput={(event) => updatingState(event)} \n          ,\n          onChange: e => setType(e.target.value),\n          value: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\" // onInput={(event) => updatingState(event)} \n          ,\n          onChange: e => setDescription(e.target.value),\n          value: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Skills\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setSkillOne(e.target.value),\n          value: skillOne\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setSkillTwo(e.target.value),\n          value: skillTwo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setSkillThree(e.target.value),\n          value: skillThree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SubmitMe, {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}, \"1kz9bHikQttJ7kw+Muu90f1tJUM=\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthorInput\");\n$RefreshReg$(_c2, \"SubmitMe\");","map":{"version":3,"sources":["/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/components/PetForm.jsx"],"names":["React","useState","axios","styled","navigate","AuthorInput","div","SubmitMe","button","props","initialName","initialType","initialDescription","initialSkillOne","initialSkillTwo","initialSkillThree","onSubmitProp","console","log","name","setName","type","setType","description","setDescription","skillOne","setSkillOne","skillTwo","setSkillTwo","skillThree","setSkillThree","onSubmitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport styled from '@emotion/styled';\nimport { navigate } from '@reach/router';\n\n//=================== Emotion Styling ======================\nconst AuthorInput = styled.div`\n    background-color: #7e52a0;\n    color: #E6BCCD;\n    width: 300px;\n    margin: 120px;\n    padding: 25px;\n    border-radius: 5px;\n`\nconst SubmitMe = styled.button`\n    background-color: #D295BF;\n    color: #f5f9e9;\n    border: 1px solid #f5f9e9;\n    margin-left: 10px;\n    margin-right: 20px;\n    text-decoration: none;\n    &:hover {\n        background-color: #29274c;\n        color: #d295bf;\n        border: 1px solid #1C2541;\n    }\n`;\n\nexport default props => {\n    const { initialName, initialType, initialDescription, initialSkillOne, initialSkillTwo, initialSkillThree, onSubmitProp } = props;\n    console.log(\"LOGGING THE ON SUBMIT PROP\", onSubmitProp)\n\n\n    console.log(typeof(onSubmitProp))\n    console.log(\"logging initial name\", initialName)\n\n    // const [state, setState ] = useState({\n    //     name: \"\",\n    //     type: \"\",\n    //     description: \"\",\n    // });\n\n    const [name, setName] = useState(initialName);\n    const [type, setType] = useState(initialType);\n    const [description, setDescription] = useState(initialDescription);\n    const [skillOne, setSkillOne] = useState(initialSkillOne);\n    const [skillTwo, setSkillTwo] = useState(initialSkillTwo);\n    const [skillThree, setSkillThree] = useState(initialSkillThree);\n\n    // const [errors, setErrors] = useState([]); \n\n    // const updatingState = (event) => {\n    //     console.log(errors)\n\n    //     if(event.target.name === \"name\" && event.target.value.length <= 3) {\n    //         setErrors({...errors, \n    //             name: \"First name needs more than 3 characters\"\n    //         });\n    //     }  else if(event.target.name === \"name\" && event.target.value.length > 3) {\n    //         setErrors({...errors, \n    //             name: \"\"\n    //         });\n    //     } else if(event.target.name === \"type\" && event.target.value.length <= 3) {\n    //         setErrors({...errors, \n    //             type: \"Last name needs more than 3 characters\"\n    //         });\n    //     } else if(event.target.name === \"type\" && event.target.value.length > 3) {\n    //         setErrors({...errors, \n    //             type: \"\"\n    //         });\n    //     }\n\n    //     setState({\n    //         ...state,\n    //         [event.target.name]: event.target.value,\n    //           //[] notation allows you to computed keys - other js variables as your key\n    //         });\n    // }\n\n    const onSubmitHandler = e => {\n        e.preventDefault();\n        onSubmitProp({ name });\n        navigate(\"/petshelter/all\");\n    }\n\n    \n\n    return (\n        <AuthorInput> \n        {/* I'm just a parent div with fancy style from @emotion/styled */}\n        <form onSubmit={ onSubmitHandler }>\n            <div className=\"form-group\">\n                <label>\n                    Name\n                </label>\n                <input type=\"text\" \n                // onInput={(event) => updatingState(event)} \n                onChange={(e)=>setName(e.target.value)} value={name} />\n            </div>\n            <div className=\"form-group\">\n                <label>\n                    Type\n                </label>\n                <input type=\"text\" \n                // onInput={(event) => updatingState(event)} \n                onChange={(e)=>setType(e.target.value)} value={type} />\n            </div>\n            <div className=\"form-group\">\n                <label>\n                    Description\n                </label>\n                <input type=\"text\" \n                // onInput={(event) => updatingState(event)} \n                onChange={(e)=>setDescription(e.target.value)} value={description} />\n            </div>\n            <div className=\"form-group\">\n                <label>\n                    Skills\n                </label>\n                <input type=\"text\" onChange={(e)=>setSkillOne(e.target.value)} value={skillOne} />\n                <input type=\"text\" onChange={(e)=>setSkillTwo(e.target.value)} value={skillTwo} />\n                <input type=\"text\" onChange={(e)=>setSkillThree(e.target.value)} value={skillThree} />\n            </div>\n            <SubmitMe type=\"submit\" className=\"btn btn-primary\"> \n            {/* I'm just a button with fancy style from @emotion/styled */}\n                Submit\n            </SubmitMe>\n        </form>\n    </AuthorInput>\n    )\n}"]},"metadata":{},"sourceType":"module"}