{"ast":null,"code":"var _jsxFileName = \"/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/components/PetForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styled from '@emotion/styled';\nimport { navigate } from '@reach/router'; //=================== Emotion Styling ======================\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthorInput = styled.div`\n    background-color: #7e52a0;\n    color: #E6BCCD;\n    width: 700px;\n    margin-left: 120px;\n    padding: 25px;\n    border-radius: 5px;\n    box-shadow: 2px 2px 25px #d295bf;\n`;\n_c = AuthorInput;\nconst SubmitMe = styled.button`\n    background-color: #D295BF;\n    color: #f5f9e9;\n    border: 1px solid #f5f9e9;\n    margin-left: 10px;\n    margin-right: 20px;\n    text-decoration: none;\n    &:hover {\n        background-color: #29274c;\n        color: #d295bf;\n        border: 1px solid #1C2541;\n    }\n`;\n_c2 = SubmitMe;\nconst Title = styled.h1`\n    color: #7E52A0;\n    margin-top: 100px;\n\n`;\n_c3 = Title;\nexport default _s(props => {\n  _s();\n\n  const {\n    initialName,\n    initialType,\n    initialDescription,\n    initialSkillOne,\n    initialSkillTwo,\n    initialSkillThree,\n    onSubmitProp\n  } = props;\n  console.log(\"LOGGING THE ON SUBMIT PROP\", onSubmitProp); // console.log(typeof(onSubmitProp))\n  // console.log(\"logging initial name\", initialName)\n\n  const [state, setState] = useState({\n    name: \"\",\n    type: \"\",\n    description: \"\"\n  });\n  const [name, setName] = useState(initialName);\n  const [type, setType] = useState(initialType);\n  const [description, setDescription] = useState(initialDescription);\n  const [skillOne, setSkillOne] = useState(initialSkillOne);\n  const [skillTwo, setSkillTwo] = useState(initialSkillTwo);\n  const [skillThree, setSkillThree] = useState(initialSkillThree);\n  const [errors, setErrors] = useState([]);\n\n  const updatingState = event => {\n    console.log(errors);\n\n    if (event.target.name === \"name\" && event.target.value.length <= 3) {\n      setErrors({ ...errors,\n        name: \"Name needs more than 3 characters\"\n      });\n    } else if (event.target.name === \"name\" && event.target.value.length > 3) {\n      setErrors({ ...errors,\n        name: \"\"\n      });\n    } else if (event.target.name === \"type\" && event.target.value.length <= 3) {\n      setErrors({ ...errors,\n        type: \"please enter a valid type of pet\"\n      });\n    } else if (event.target.name === \"type\" && event.target.value.length > 3) {\n      setErrors({ ...errors,\n        type: \"\"\n      });\n    } else if (event.target.name === \"description\" && event.target.value.length <= 3) {\n      setErrors({ ...errors,\n        description: \"Please enter a valid description\"\n      });\n    } else if (event.target.name === \"description\" && event.target.value.length > 3) {\n      setErrors({ ...errors,\n        description: \"\"\n      });\n    }\n\n    setState({ ...state,\n      [event.target.name]: event.target.value //[] notation allows you to computed keys - other js variables as your key\n\n    });\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    onSubmitProp({\n      name,\n      type,\n      description,\n      skillOne,\n      skillTwo,\n      skillThree\n    });\n    navigate(\"/petshelter/all\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Pet Shelter - Adopt A Friend Today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AuthorInput, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onInput: event => updatingState(event),\n            onChange: e => setName(e.target.value),\n            name: \"name\",\n            value: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this), errors.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onInput: event => updatingState(event),\n            onChange: e => setType(e.target.value),\n            name: \"type\",\n            value: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), errors.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onInput: event => updatingState(event),\n            onChange: e => setDescription(e.target.value),\n            name: \"description\",\n            value: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this), errors.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setSkillOne(e.target.value),\n            value: skillOne\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setSkillTwo(e.target.value),\n            value: skillTwo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setSkillThree(e.target.value),\n            value: skillThree\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SubmitMe, {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}, \"4ntcpPdJW9u5ritFllH4w6aEn38=\");\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AuthorInput\");\n$RefreshReg$(_c2, \"SubmitMe\");\n$RefreshReg$(_c3, \"Title\");","map":{"version":3,"sources":["/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/components/PetForm.jsx"],"names":["React","useState","axios","styled","navigate","AuthorInput","div","SubmitMe","button","Title","h1","props","initialName","initialType","initialDescription","initialSkillOne","initialSkillTwo","initialSkillThree","onSubmitProp","console","log","state","setState","name","type","description","setName","setType","setDescription","skillOne","setSkillOne","skillTwo","setSkillTwo","skillThree","setSkillThree","errors","setErrors","updatingState","event","target","value","length","onSubmitHandler","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,QAAT,QAAyB,eAAzB,C,CAEA;;;AACA,MAAMC,WAAW,GAAGF,MAAM,CAACG,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;KAAMD,W;AASN,MAAME,QAAQ,GAAGJ,MAAM,CAACK,MAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;MAAMD,Q;AAaN,MAAME,KAAK,GAAGN,MAAM,CAACO,EAAG;AACxB;AACA;AACA;AACA,CAJA;MAAMD,K;AAMN,kBAAeE,KAAK,IAAI;AAAA;;AACpB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,WAAf;AAA4BC,IAAAA,kBAA5B;AAAgDC,IAAAA,eAAhD;AAAiEC,IAAAA,eAAjE;AAAkFC,IAAAA,iBAAlF;AAAqGC,IAAAA;AAArG,MAAsHP,KAA5H;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,YAA1C,EAFoB,CAKpB;AACA;;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAqBrB,QAAQ,CAAC;AAChCsB,IAAAA,IAAI,EAAE,EAD0B;AAEhCC,IAAAA,IAAI,EAAE,EAF0B;AAGhCC,IAAAA,WAAW,EAAE;AAHmB,GAAD,CAAnC;AAMA,QAAM,CAACF,IAAD,EAAOG,OAAP,IAAkBzB,QAAQ,CAACW,WAAD,CAAhC;AACA,QAAM,CAACY,IAAD,EAAOG,OAAP,IAAkB1B,QAAQ,CAACY,WAAD,CAAhC;AACA,QAAM,CAACY,WAAD,EAAcG,cAAd,IAAgC3B,QAAQ,CAACa,kBAAD,CAA9C;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAACc,eAAD,CAAxC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0B/B,QAAQ,CAACe,eAAD,CAAxC;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BjC,QAAQ,CAACgB,iBAAD,CAA5C;AAEA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnC,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMoC,aAAa,GAAIC,KAAD,IAAW;AAC7BnB,IAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;;AAEA,QAAGG,KAAK,CAACC,MAAN,CAAahB,IAAb,KAAsB,MAAtB,IAAgCe,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,IAA6B,CAAhE,EAAmE;AAC/DL,MAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AACNZ,QAAAA,IAAI,EAAE;AADA,OAAD,CAAT;AAGH,KAJD,MAIQ,IAAGe,KAAK,CAACC,MAAN,CAAahB,IAAb,KAAsB,MAAtB,IAAgCe,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,GAA4B,CAA/D,EAAkE;AACtEL,MAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AACNZ,QAAAA,IAAI,EAAE;AADA,OAAD,CAAT;AAGH,KAJO,MAID,IAAGe,KAAK,CAACC,MAAN,CAAahB,IAAb,KAAsB,MAAtB,IAAgCe,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,IAA6B,CAAhE,EAAmE;AACtEL,MAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AACNX,QAAAA,IAAI,EAAE;AADA,OAAD,CAAT;AAGH,KAJM,MAIA,IAAGc,KAAK,CAACC,MAAN,CAAahB,IAAb,KAAsB,MAAtB,IAAgCe,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,GAA4B,CAA/D,EAAkE;AACrEL,MAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AACNX,QAAAA,IAAI,EAAE;AADA,OAAD,CAAT;AAGH,KAJM,MAIA,IAAGc,KAAK,CAACC,MAAN,CAAahB,IAAb,KAAsB,aAAtB,IAAuCe,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,IAA6B,CAAvE,EAA0E;AAC7EL,MAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AACNV,QAAAA,WAAW,EAAE;AADP,OAAD,CAAT;AAGH,KAJM,MAIA,IAAGa,KAAK,CAACC,MAAN,CAAahB,IAAb,KAAsB,aAAtB,IAAuCe,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,GAA4B,CAAtE,EAAyE;AAC5EL,MAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AACNV,QAAAA,WAAW,EAAE;AADP,OAAD,CAAT;AAGH;;AAEDH,IAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAEL,OAACiB,KAAK,CAACC,MAAN,CAAahB,IAAd,GAAqBe,KAAK,CAACC,MAAN,CAAaC,KAF7B,CAGH;;AAHG,KAAD,CAAR;AAKH,GAlCD;;AAoCA,QAAME,eAAe,GAAGC,CAAC,IAAI;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACA1B,IAAAA,YAAY,CAAC;AAAEK,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcC,MAAAA,WAAd;AAA2BI,MAAAA,QAA3B;AAAqCE,MAAAA,QAArC;AAA+CE,MAAAA;AAA/C,KAAD,CAAZ;AACA7B,IAAAA,QAAQ,CAAC,iBAAD,CAAR;AACH,GAJD;;AAQA,sBACI;AAAA,4BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,WAAD;AAAA,6BAEA;AAAM,QAAA,QAAQ,EAAGsC,eAAjB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAO,YAAA,IAAI,EAAC,MAAZ;AACA,YAAA,OAAO,EAAGJ,KAAD,IAAWD,aAAa,CAACC,KAAD,CADjC;AAEA,YAAA,QAAQ,EAAGK,CAAD,IAAKjB,OAAO,CAACiB,CAAC,CAACJ,MAAF,CAASC,KAAV,CAFtB;AAEwC,YAAA,IAAI,EAAC,MAF7C;AAEoD,YAAA,KAAK,EAAEjB;AAF3D;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAOKY,MAAM,CAACZ,IAPZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAO,YAAA,IAAI,EAAC,MAAZ;AACA,YAAA,OAAO,EAAGe,KAAD,IAAWD,aAAa,CAACC,KAAD,CADjC;AAEA,YAAA,QAAQ,EAAGK,CAAD,IAAKhB,OAAO,CAACgB,CAAC,CAACJ,MAAF,CAASC,KAAV,CAFtB;AAEwC,YAAA,IAAI,EAAC,MAF7C;AAEoD,YAAA,KAAK,EAAEhB;AAF3D;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAOKW,MAAM,CAACX,IAPZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAmBI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAO,YAAA,IAAI,EAAC,MAAZ;AACA,YAAA,OAAO,EAAGc,KAAD,IAAWD,aAAa,CAACC,KAAD,CADjC;AAEA,YAAA,QAAQ,EAAGK,CAAD,IAAKf,cAAc,CAACe,CAAC,CAACJ,MAAF,CAASC,KAAV,CAF7B;AAE+C,YAAA,IAAI,EAAC,aAFpD;AAEkE,YAAA,KAAK,EAAEf;AAFzE;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAOKU,MAAM,CAACV,WAPZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eA4BI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAGkB,CAAD,IAAKb,WAAW,CAACa,CAAC,CAACJ,MAAF,CAASC,KAAV,CAA7C;AAA+D,YAAA,KAAK,EAAEX;AAAtE;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAGc,CAAD,IAAKX,WAAW,CAACW,CAAC,CAACJ,MAAF,CAASC,KAAV,CAA7C;AAA+D,YAAA,KAAK,EAAET;AAAtE;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAGY,CAAD,IAAKT,aAAa,CAACS,CAAC,CAACJ,MAAF,CAASC,KAAV,CAA/C;AAAiE,YAAA,KAAK,EAAEP;AAAxE;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BJ,eAoCI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAC,QAAf;AAAwB,UAAA,SAAS,EAAC,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmDH,CAtHD","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport styled from '@emotion/styled';\nimport { navigate } from '@reach/router';\n\n//=================== Emotion Styling ======================\nconst AuthorInput = styled.div`\n    background-color: #7e52a0;\n    color: #E6BCCD;\n    width: 700px;\n    margin-left: 120px;\n    padding: 25px;\n    border-radius: 5px;\n    box-shadow: 2px 2px 25px #d295bf;\n`\nconst SubmitMe = styled.button`\n    background-color: #D295BF;\n    color: #f5f9e9;\n    border: 1px solid #f5f9e9;\n    margin-left: 10px;\n    margin-right: 20px;\n    text-decoration: none;\n    &:hover {\n        background-color: #29274c;\n        color: #d295bf;\n        border: 1px solid #1C2541;\n    }\n`\nconst Title = styled.h1`\n    color: #7E52A0;\n    margin-top: 100px;\n\n`;\n\nexport default props => {\n    const { initialName, initialType, initialDescription, initialSkillOne, initialSkillTwo, initialSkillThree, onSubmitProp } = props;\n    console.log(\"LOGGING THE ON SUBMIT PROP\", onSubmitProp)\n\n\n    // console.log(typeof(onSubmitProp))\n    // console.log(\"logging initial name\", initialName)\n\n    const [state, setState ] = useState({\n        name: \"\",\n        type: \"\",\n        description: \"\",\n    });\n\n    const [name, setName] = useState(initialName);\n    const [type, setType] = useState(initialType);\n    const [description, setDescription] = useState(initialDescription);\n    const [skillOne, setSkillOne] = useState(initialSkillOne);\n    const [skillTwo, setSkillTwo] = useState(initialSkillTwo);\n    const [skillThree, setSkillThree] = useState(initialSkillThree);\n\n    const [errors, setErrors] = useState([]); \n\n    const updatingState = (event) => {\n        console.log(errors)\n\n        if(event.target.name === \"name\" && event.target.value.length <= 3) {\n            setErrors({...errors, \n                name: \"Name needs more than 3 characters\"\n            });\n        }  else if(event.target.name === \"name\" && event.target.value.length > 3) {\n            setErrors({...errors, \n                name: \"\"\n            });\n        } else if(event.target.name === \"type\" && event.target.value.length <= 3) {\n            setErrors({...errors, \n                type: \"please enter a valid type of pet\"\n            });\n        } else if(event.target.name === \"type\" && event.target.value.length > 3) {\n            setErrors({...errors, \n                type: \"\"\n            });\n        } else if(event.target.name === \"description\" && event.target.value.length <= 3) {\n            setErrors({...errors, \n                description: \"Please enter a valid description\"\n            });\n        } else if(event.target.name === \"description\" && event.target.value.length > 3) {\n            setErrors({...errors, \n                description: \"\"\n            });\n        }\n\n        setState({\n            ...state,\n            [event.target.name]: event.target.value,\n              //[] notation allows you to computed keys - other js variables as your key\n            });\n    }\n\n    const onSubmitHandler = e => {\n        e.preventDefault();\n        onSubmitProp({ name, type, description, skillOne, skillTwo, skillThree });\n        navigate(\"/petshelter/all\");\n    }\n\n    \n\n    return (\n        <div>\n            <Title>\n                Pet Shelter - Adopt A Friend Today\n            </Title>\n            <AuthorInput> \n            {/* I'm just a parent div with fancy style from @emotion/styled */}\n            <form onSubmit={ onSubmitHandler }>\n                <div className=\"form-group\">\n                    <label>\n                        Name\n                    </label>\n                    <input type=\"text\" \n                    onInput={(event) => updatingState(event)} \n                    onChange={(e)=>setName(e.target.value)} name=\"name\" value={name} />\n                    {errors.name}\n                </div>\n                <div className=\"form-group\">\n                    <label>\n                        Type\n                    </label>\n                    <input type=\"text\" \n                    onInput={(event) => updatingState(event)} \n                    onChange={(e)=>setType(e.target.value)} name=\"type\" value={type} />\n                    {errors.type}\n                </div>\n                <div className=\"form-group\">\n                    <label>\n                        Description\n                    </label>\n                    <input type=\"text\" \n                    onInput={(event) => updatingState(event)} \n                    onChange={(e)=>setDescription(e.target.value)} name=\"description\" value={description} />\n                    {errors.description}\n                </div>\n                <div className=\"form-group\">\n                    <label>\n                        Skills\n                    </label>\n                    <input type=\"text\" onChange={(e)=>setSkillOne(e.target.value)} value={skillOne} />\n                    <input type=\"text\" onChange={(e)=>setSkillTwo(e.target.value)} value={skillTwo} />\n                    <input type=\"text\" onChange={(e)=>setSkillThree(e.target.value)} value={skillThree} />\n                </div>\n                <SubmitMe type=\"submit\" className=\"btn btn-primary\"> \n                {/* I'm just a button with fancy style from @emotion/styled */}\n                    Submit\n                </SubmitMe>\n            </form>\n        </AuthorInput>\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}