{"ast":null,"code":"import _toConsumableArray from\"/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import axios from'axios';import PetForm from'./components/PetForm';import PetList from'./components/PetList';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default(function(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),pets=_useState2[0],setPets=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loaded=_useState4[0],setLoaded=_useState4[1];useEffect(function(){axios.get('http://localhost:8000/api/petshelter/all').then(function(res){console.log(res);setPets(res.data);setLoaded(true);}).catch(function(err){return console.error(err);});},[]);var removeFromDom=function removeFromDom(id){setPets(pets.filter(function(pet){return pet._id!=id;}));};var createPet=function createPet(id){axios.post('http://localhost:8000/api/petsheleter/add',id).then(function(res){setPets([].concat(_toConsumableArray(pets),[res.data]));}).catch(function(err){return console.log(\"errors trying to add a new pet\",err);});};return/*#__PURE__*/_jsxs(\"div\",{id:\"flexy\",children:[/*#__PURE__*/_jsx(PetForm,{onSubmitProp:createPet,initialName:\"\",initialType:\"\",initialDescription:\"\",initialSkillOne:\"\",initialSkillTwo:\"\",initialSkillThree:\"\"}),loaded&&/*#__PURE__*/_jsx(PetList,{pets:pets,setPets:setPets,removeFromDom:removeFromDom})]});});","map":{"version":3,"sources":["/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/Main.js"],"names":["React","useEffect","useState","axios","PetForm","PetList","pets","setPets","loaded","setLoaded","get","then","res","console","log","data","catch","err","error","removeFromDom","id","filter","pet","_id","createPet","post"],"mappings":"kUAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,C,wFAEA,eAAe,UAAM,eACSH,QAAQ,CAAC,EAAD,CADjB,wCACTI,IADS,eACHC,OADG,8BAEaL,QAAQ,CAAC,KAAD,CAFrB,yCAETM,MAFS,eAEDC,SAFC,eAIjBR,SAAS,CAAC,UAAM,CACZE,KAAK,CAACO,GAAN,CAAU,0CAAV,EACCC,IADD,CACM,SAAAC,GAAG,CAAI,CACTC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACAL,OAAO,CAACK,GAAG,CAACG,IAAL,CAAP,CACAN,SAAS,CAAC,IAAD,CAAT,CACH,CALD,EAMCO,KAND,CAMO,SAAAC,GAAG,QAAIJ,CAAAA,OAAO,CAACK,KAAR,CAAcD,GAAd,CAAJ,EANV,EAOH,CARQ,CAQN,EARM,CAAT,CAUA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,EAAE,CAAI,CACxBb,OAAO,CAACD,IAAI,CAACe,MAAL,CAAY,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,GAAJ,EAAWH,EAAf,EAAf,CAAD,CAAP,CACH,CAFD,CAIA,GAAMI,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAJ,EAAE,CAAI,CACpBjB,KAAK,CAACsB,IAAN,CAAW,2CAAX,CAAwDL,EAAxD,EACCT,IADD,CACM,SAAAC,GAAG,CAAI,CACTL,OAAO,8BAAKD,IAAL,GAAWM,GAAG,CAACG,IAAf,GAAP,CACH,CAHD,EAICC,KAJD,CAIO,SAAAC,GAAG,QAAIJ,CAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,CAA8CG,GAA9C,CAAJ,EAJV,EAKH,CAND,CAQA,mBACI,aAAK,EAAE,CAAC,OAAR,wBACI,KAAC,OAAD,EAAS,YAAY,CAAGO,SAAxB,CAAoC,WAAW,CAAC,EAAhD,CAAmD,WAAW,CAAC,EAA/D,CAAkE,kBAAkB,CAAC,EAArF,CAAwF,eAAe,CAAC,EAAxG,CAA2G,eAAe,CAAC,EAA3H,CAA8H,iBAAiB,CAAC,EAAhJ,EADJ,CAEKhB,MAAM,eACH,KAAC,OAAD,EAAS,IAAI,CAAEF,IAAf,CAAqB,OAAO,CAAEC,OAA9B,CAAuC,aAAa,CAAEY,aAAtD,EAHR,GADJ,CAQH,CAlCD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport PetForm from './components/PetForm';\nimport PetList from './components/PetList';\n\nexport default () => {\n    const [ pets, setPets ] = useState([]);\n    const [ loaded, setLoaded ] = useState(false);\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/petshelter/all')\n        .then(res => {\n            console.log(res);\n            setPets(res.data);\n            setLoaded(true);\n        })\n        .catch(err => console.error(err));\n    }, [])\n\n    const removeFromDom = id => {\n        setPets(pets.filter(pet => pet._id != id));\n    }\n\n    const createPet = id => {\n        axios.post('http://localhost:8000/api/petsheleter/add', id)\n        .then(res => {\n            setPets([...pets, res.data])\n        })\n        .catch(err => console.log(\"errors trying to add a new pet\", err))\n    }\n\n    return (\n        <div id=\"flexy\">\n            <PetForm onSubmitProp={ createPet } initialName=\"\" initialType=\"\" initialDescription=\"\" initialSkillOne=\"\" initialSkillTwo=\"\" initialSkillThree=\"\" />\n            {loaded && \n                <PetList pets={pets} setPets={setPets} removeFromDom={removeFromDom}/>\n            }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}