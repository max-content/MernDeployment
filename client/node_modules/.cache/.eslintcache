[{"/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/index.js":"1","/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/App.js":"2","/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/reportWebVitals.js":"3","/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/Main.js":"4","/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/components/Show.jsx":"5","/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/components/Update.jsx":"6","/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/components/PetForm.jsx":"7","/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/components/PetList.jsx":"8","/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/components/DeleteButton.jsx":"9","/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/components/Form.js":"10"},{"size":500,"mtime":1616595695273,"results":"11","hashOfConfig":"12"},{"size":976,"mtime":1616616512449,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1616595695274,"results":"14","hashOfConfig":"12"},{"size":1244,"mtime":1616618843532,"results":"15","hashOfConfig":"12"},{"size":1478,"mtime":1616617037755,"results":"16","hashOfConfig":"12"},{"size":1387,"mtime":1616616879275,"results":"17","hashOfConfig":"12"},{"size":5432,"mtime":1616620918526,"results":"18","hashOfConfig":"12"},{"size":1893,"mtime":1616621100813,"results":"19","hashOfConfig":"12"},{"size":734,"mtime":1616614688168,"results":"20","hashOfConfig":"12"},{"size":3858,"mtime":1616616374064,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hndyhn",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/index.js",[],"/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/App.js",[],"/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/reportWebVitals.js",[],"/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/Main.js",["49","50"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport PetForm from './components/PetForm';\nimport PetList from './components/PetList';\n\nexport default () => {\n    const [ pets, setPets ] = useState([]);\n    const [ loaded, setLoaded ] = useState(false);\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/petshelter/all')\n        .then(res => {\n            console.log(res);\n            setPets(res.data);\n            setLoaded(true);\n        })\n        .catch(err => console.error(err));\n    }, [])\n\n    const removeFromDom = id => {\n        setPets(pets.filter(pet => pet._id != id));\n    }\n\n    const createPet = id => {\n        axios.post('http://localhost:8000/api/petsheleter/add', id)\n        .then(res => {\n            setPets([...pets, res.data])\n        })\n        .catch(err => console.log(\"errors trying to add a new pet\", err))\n    }\n\n    return (\n        <div id=\"flexy\">\n            <PetForm onSubmitProp={ createPet } initialName=\"\" initialType=\"\" initialDescription=\"\" initialSkillOne=\"\" initialSkillTwo=\"\" initialSkillThree=\"\" />\n            {loaded && \n                <PetList pets={pets} setPets={setPets} removeFromDom={removeFromDom}/>\n            }\n        </div>\n    )\n}","/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/components/Show.jsx",["51","52"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from '@reach/router';\nimport styled from '@emotion/styled';\n\nconst SubmitMe = styled.button`\n    background-color: #D295BF;\n    color: #f5f9e9;\n    border: 1px solid #f5f9e9;\n    margin-left: 10px;\n    margin-right: 20px;\n    text-decoration: none;\n    &:hover {\n        background-color: #29274c;\n        color: #d295bf;\n        border: 1px solid #1C2541;\n    }\n`;\n\nexport default props => {\n    const [pet, setPet] = useState({})\n\n    useEffect(() => {\n        axios.get(\"http://localhost:8000/api/petshelter/\" + props.id)\n        .then(res => setPet(res.data))\n    }, [])\n\n    return(\n        <div className=\"container\">\n            <h1 style={{color: \"#E6BCCD\"}}>\n                {pet.name}\n            </h1>\n            <h3 style={{color: \"#E6BCCD\"}}>\n                {pet.type}\n            </h3>\n            <p style={{color: \"#E6BCCD\"}}>\n                {pet.description}\n            </p>\n            <ul style={{color: \"#f5f9e9\"}}>\n                <li>\n                    {pet.skillOne}\n                </li>\n                <li>\n                    {pet.skillTwo}\n                </li>\n                <li>\n                    {pet.skillThree}\n                </li>\n            </ul>\n            <Link to={'/petshelter/edit/' + pet._id}>\n                <SubmitMe>\n                    Edit\n                </SubmitMe>\n            </Link>\n            \n        </div>\n    )\n}","/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/components/Update.jsx",["53","54"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\nimport PetForm from './PetForm';\nimport DeleteButton from './DeleteButton';\n\nexport default props => {\n    const { id } = props;\n    const [pet, setPet] = useState();\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/petshelter/' + id)\n        .then(res => {\n            setPet(res.data);\n            setLoaded(true);\n        })\n        .catch(err => console.log(err));\n    }, [])\n\n    const updatePet = pet => {\n        console.log(\"we are trying to update a pet\");\n        axios.put('http://localhost:8000/api/petshelter/' + id, pet)\n        .then(res => console.log(res), navigate(\"/petshelter/all\"))\n        .catch(err => console.log(err));\n    }\n\n    return (\n        <div>\n            <h1>\n                Update an Pet Information\n            </h1>\n            {loaded && (\n                <>\n                    <PetForm onSubmitProp={updatePet} initialName={pet.name} initialType={pet.type} initialDescription={pet.description} initialSkillOne={pet.skillOne} initialSkillTwo={pet.skillTwo} initialSkillThree={pet.skillThree} />\n                    <DeleteButton id={pet._id} successCallback = {() => navigate(\"/petshelter/all\") } />\n                </>\n            )}\n        </div>\n    )\n}","/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/components/PetForm.jsx",["55","56"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport styled from '@emotion/styled';\nimport { navigate } from '@reach/router';\n\n//=================== Emotion Styling ======================\nconst AuthorInput = styled.div`\n    background-color: #7e52a0;\n    color: #E6BCCD;\n    width: 700px;\n    margin-left: 120px;\n    padding: 25px;\n    border-radius: 5px;\n    box-shadow: 2px 2px 25px #d295bf;\n`\nconst SubmitMe = styled.button`\n    background-color: #D295BF;\n    color: #f5f9e9;\n    border: 1px solid #f5f9e9;\n    margin-left: 10px;\n    margin-right: 20px;\n    text-decoration: none;\n    &:hover {\n        background-color: #29274c;\n        color: #d295bf;\n        border: 1px solid #1C2541;\n    }\n`\nconst Title = styled.h1`\n    color: #7E52A0;\n    margin-top: 100px;\n    margin-left: 160px;\n    margin-bottom: 25px;\n`;\n\nexport default props => {\n    const { initialName, initialType, initialDescription, initialSkillOne, initialSkillTwo, initialSkillThree, onSubmitProp } = props;\n    console.log(\"LOGGING THE ON SUBMIT PROP\", onSubmitProp)\n\n\n    // console.log(typeof(onSubmitProp))\n    // console.log(\"logging initial name\", initialName)\n\n    const [state, setState ] = useState({\n        name: \"\",\n        type: \"\",\n        description: \"\",\n    });\n\n    const [name, setName] = useState(initialName);\n    const [type, setType] = useState(initialType);\n    const [description, setDescription] = useState(initialDescription);\n    const [skillOne, setSkillOne] = useState(initialSkillOne);\n    const [skillTwo, setSkillTwo] = useState(initialSkillTwo);\n    const [skillThree, setSkillThree] = useState(initialSkillThree);\n\n    const [errors, setErrors] = useState([]); \n\n    const updatingState = (event) => {\n        console.log(errors)\n\n        if(event.target.name === \"name\" && event.target.value.length <= 3) {\n            setErrors({...errors, \n                name: \"Name needs more than 3 characters\"\n            });\n        }  else if(event.target.name === \"name\" && event.target.value.length > 3) {\n            setErrors({...errors, \n                name: \"\"\n            });\n        } else if(event.target.name === \"type\" && event.target.value.length <= 3) {\n            setErrors({...errors, \n                type: \"please enter a valid type of pet\"\n            });\n        } else if(event.target.name === \"type\" && event.target.value.length > 3) {\n            setErrors({...errors, \n                type: \"\"\n            });\n        } else if(event.target.name === \"description\" && event.target.value.length <= 3) {\n            setErrors({...errors, \n                description: \"Please enter a valid description\"\n            });\n        } else if(event.target.name === \"description\" && event.target.value.length > 3) {\n            setErrors({...errors, \n                description: \"\"\n            });\n        }\n\n        setState({\n            ...state,\n            [event.target.name]: event.target.value,\n              //[] notation allows you to computed keys - other js variables as your key\n            });\n    }\n\n    const onSubmitHandler = e => {\n        e.preventDefault();\n        onSubmitProp({ name, type, description, skillOne, skillTwo, skillThree });\n        navigate(\"/petshelter/all\");\n    }\n\n    \n\n    return (\n        <div>\n            <Title>\n                Pet Shelter - Adopt A Friend Today\n            </Title>\n            <AuthorInput> \n            {/* I'm just a parent div with fancy style from @emotion/styled */}\n            <form onSubmit={ onSubmitHandler }>\n                <div className=\"form-group\">\n                    <label>\n                        Name\n                    </label>\n                    <input type=\"text\" \n                    onInput={(event) => updatingState(event)} \n                    onChange={(e)=>setName(e.target.value)} name=\"name\" value={name} />\n                    {errors.name}\n                </div>\n                <div className=\"form-group\">\n                    <label>\n                        Type\n                    </label>\n                    <input type=\"text\" \n                    onInput={(event) => updatingState(event)} \n                    onChange={(e)=>setType(e.target.value)} name=\"type\" value={type} />\n                    {errors.type}\n                </div>\n                <div className=\"form-group\">\n                    <label>\n                        Description\n                    </label>\n                    <input type=\"text\" \n                    onInput={(event) => updatingState(event)} \n                    onChange={(e)=>setDescription(e.target.value)} name=\"description\" value={description} />\n                    {errors.description}\n                </div>\n                <div className=\"form-group\">\n                    <label>\n                        Skills\n                    </label>\n                    <input type=\"text\" onChange={(e)=>setSkillOne(e.target.value)} value={skillOne} />\n                    <input type=\"text\" onChange={(e)=>setSkillTwo(e.target.value)} value={skillTwo} />\n                    <input type=\"text\" onChange={(e)=>setSkillThree(e.target.value)} value={skillThree} />\n                </div>\n                <SubmitMe type=\"submit\" className=\"btn btn-primary\"> \n                {/* I'm just a button with fancy style from @emotion/styled */}\n                    Submit\n                </SubmitMe>\n            </form>\n        </AuthorInput>\n    </div>\n    )\n}","/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/components/PetList.jsx",["57","58","59","60"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport styled from '@emotion/styled';\nimport { Link } from '@reach/router';\nimport DeleteButton from './DeleteButton';\n\n//=================== Emotion Styling ======================\nconst ListStyle = styled.div`\n    background-color: #7e52a0;\n    color: #E6BCCD;\n    width: 400px;\n    margin-left: 120px;\n    padding: 25px;\n    box-shadow: 2px 2px 25px #d295bf;\n    border-radius: 5px;\n`\nconst SubmitMe = styled.button`\n    background-color: #D295BF;\n    color: #f5f9e9;\n    border: 1px solid #f5f9e9;\n    margin-left: 10px;\n    margin-right: 20px;\n    text-decoration: none;\n    &:hover {\n        background-color: #29274c;\n        color: #d295bf;\n        border: 1px solid #1C2541;\n    }\n`\nconst Title = styled.h1`\n    color: #7E52A0;\n    margin-top: 100px;\n    margin-left: 160px;\n    margin-bottom: 25px;\n`;\n\nexport default props => {\n    const removeFromDom = id => {\n        props.setPets(props.pets.filter(pet => pet._id != id))\n    }\n\n    return (\n        <div>\n            <Title>\n                Adoptable Pets\n            </Title>\n            <ListStyle> \n            {/* I'm another fancy emotion div =} */}\n\n            {props.pets.map((pet, index)=> {\n                    return (\n                    <p key={index}>\n                        <Link to={\"/petshelter/\" + pet._id}>\n                            {pet.name}\n                        </Link>, {pet.type} {pet.description}\n                        <SubmitMe>\n                            <Link to={\"/petshelter/edit/\" + pet._id }>\n                                Edit\n                            </Link>\n                        </SubmitMe>\n                        <DeleteButton id={pet._id} successCallback={() => removeFromDom(pet._id)}/>\n                    </p>\n                    )\n                    })}\n            </ListStyle>\n        </div>\n    )\n}","/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/components/DeleteButton.jsx",["61"],"import React from 'react';\nimport axios from 'axios';\nimport styled from '@emotion/styled';\n\nconst SubmitMe = styled.button`\n    background-color: #D295BF;\n    color: #f5f9e9;\n    border: 1px solid #f5f9e9;\n    margin-left: 10px;\n    margin-right: 20px;\n    text-decoration: none;\n    &:hover {\n        background-color: #29274c;\n        color: #d295bf;\n        border: 1px solid #1C2541;\n    }\n`;\n\nexport default props => {\n    const { id, successCallback} = props;\n\n    const deletePet = e => {\n        axios.delete('http://localhost:8000/api/petshelter/' + id )\n        .then(res => {\n            successCallback();\n        })\n    }\n    return (\n        <SubmitMe onClick={deletePet}>\n            Delete\n        </SubmitMe>\n    )\n}","/Users/miriamsalzman/Dropbox/CourseWork/MERN/FullstackMERN/BeltExam/client/src/components/Form.js",["62"],"import React, { useState } from 'react';\n\nconst Form = (props) => {\n    const { inputs, setInputs } = props;\n\n    const [state, setState] = useState( {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n    }\n    );\n\n    const [errors, setErrors] = useState([]); \n\n    const updatingState = (event) => {\n        console.log(errors)\n\n        if(event.target.name === \"firstName\" && event.target.value.length <= 2) {\n            setErrors({...errors, \n                firstName: \"First name needs more than 2 characters\"\n            });\n        } else if(event.target.name === \"firstName\" && event.target.value.length > 2) {\n            setErrors({...errors, \n                firstName: \"\"\n            });\n        } else if(event.target.name === \"lastName\" && event.target.value.length <= 2) {\n            setErrors({...errors, \n                lastName: \"Last name needs more than 2 characters\"\n            });\n        } else if(event.target.name === \"lastName\" && event.target.value.length > 2) {\n            setErrors({...errors, \n                lastName: \"\"\n            });\n        } else if(event.target.name === \"email\" && event.target.value.length <= 5) {\n            setErrors({...errors, \n                email: \"Please enter a valid email\"\n            });\n        } else if(event.target.name === \"email\" && event.target.value.length > 5) {\n            setErrors({...errors, \n                email: \"\"\n        });\n        } else if(event.target.name === \"password\" && event.target.value.length < 8) {\n            setErrors({...errors, \n                password: \"please enter a password that is 8 characters long\"\n            });\n        } else if(event.target.name === \"password\" && event.target.value.length >= 8) {\n            setErrors({...errors, \n                password: \"\"});\n        }\n\n        setState({\n        ...state,\n        [event.target.name]: event.target.value,\n          //[] notation allows you to computed keys - other js variables as your key\n        });\n    }\n\n    const submitState = (event) => {\n        event.preventDefault();\n        setInputs({\n        ...state,\n        });\n    }\n    \n    return (\n      <section class=\"d-flex justify-content-center align-items-lg-center register-photo\">\n        <div class=\"form-container\" style={{ width: 426 }}>\n          <form onSubmit={submitState}>\n            <h2 class=\"text-center\">\n              <strong>Login</strong>\n            </h2>\n            <div class=\"form-group\">\n              <input\n                type=\"text\" name=\"firstName\"\n                onChange={(event) => updatingState(event)}\n                placeholder=\"First Name\"\n              />\n              {errors.firstName}\n            </div>\n            <div class=\"form-group\">\n              <input\n                type=\"text\" name=\"lastName\"\n                onChange={(event) => updatingState(event)}\n                placeholder=\"Last Name\"\n              />\n              {errors.lastName}\n            </div>\n            <div class=\"form-group\">\n              <input\n                type=\"email\" name=\"email\"\n                onChange={(event) => updatingState(event)}\n                placeholder=\"Email\"\n              />\n              {errors.email}\n            </div>\n            <div class=\"form-group\">\n              <input\n                type=\"password\" name=\"password\" \n                onChange={(event) => updatingState(event)}\n                placeholder=\"Password\"\n              />\n              {errors.password}\n            </div>\n            <div class=\"form-group\">\n              <button\n                class=\"btn btn-primary btn-block\"\n                value=\"Form\"\n                type=\"submit\"\n              >\n                Login\n              </button>\n            </div>\n          </form>\n        </div>\n    </section>\n    );\n};\n\nexport default Form;\n",{"ruleId":"63","severity":1,"message":"64","line":6,"column":1,"nodeType":"65","endLine":40,"endColumn":2},{"ruleId":"66","severity":1,"message":"67","line":21,"column":44,"nodeType":"68","messageId":"69","endLine":21,"endColumn":46},{"ruleId":"63","severity":1,"message":"64","line":20,"column":1,"nodeType":"65","endLine":58,"endColumn":2},{"ruleId":"70","severity":1,"message":"71","line":26,"column":8,"nodeType":"72","endLine":26,"endColumn":10,"suggestions":"73"},{"ruleId":"63","severity":1,"message":"64","line":7,"column":1,"nodeType":"65","endLine":41,"endColumn":2},{"ruleId":"70","severity":1,"message":"74","line":19,"column":8,"nodeType":"72","endLine":19,"endColumn":10,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":13},{"ruleId":"63","severity":1,"message":"64","line":36,"column":1,"nodeType":"65","endLine":154,"endColumn":2},{"ruleId":"76","severity":1,"message":"80","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"77","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":13},{"ruleId":"63","severity":1,"message":"64","line":37,"column":1,"nodeType":"65","endLine":68,"endColumn":2},{"ruleId":"66","severity":1,"message":"67","line":39,"column":56,"nodeType":"68","messageId":"69","endLine":39,"endColumn":58},{"ruleId":"63","severity":1,"message":"64","line":19,"column":1,"nodeType":"65","endLine":33,"endColumn":2},{"ruleId":"76","severity":1,"message":"81","line":4,"column":13,"nodeType":"78","messageId":"79","endLine":4,"endColumn":19},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.","ArrayExpression",["82"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["83"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'inputs' is assigned a value but never used.",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [props.id]",{"range":"88","text":"89"},"Update the dependencies array to be: [id]",{"range":"90","text":"91"},[666,668],"[props.id]",[565,567],"[id]"]